property pSkillLevelWindowIdon construct mepSkillLevelWindowId = "snowwar_skillevelwindow"initThread("snowwar.loungemenu.thread.index")return TRUEendon deconstruct meif windowExists(pSkillLevelWindowId) then removeWindow(pSkillLevelWindowId)closeThread(#loungemenu)return TRUEendon Refresh me, tTopic, tdataif getThread(#loungemenu) = FALSE then return FALSEtIntObj = getThread(#loungemenu).getInterface()if tIntObj = FALSE then return FALSEtComObj = getThread(#loungemenu).getComponent()if tComObj = FALSE then return FALSEcase tTopic of#loungeinfo: return me.createSkillLevelWindow(tdata)#tournamentlogo: return tIntObj.setTournamentLogo(tdata)#numtickets: return tIntObj.setNumTickets()#instancelist: return tIntObj.setInstanceList()#gameparameters: return tIntObj.showGameCreation()#createok,#gameinstance:tComObj.saveUserTeamIndex()return(tIntObj.showInstance())#gamedeleted:me.getGameSystem().unobserveInstance()tComObj.resetUserTeamIndex()return tIntObj.ChangeWindowView(#gameList)#joinparameters: return tComObj.joinGame()#watchok: return tIntObj.setWatchMode(1)#watchfailed:tIntObj.setWatchMode(0)return tIntObj.showErrorMessage(tdata[#reason], tdata[#request])#joinfailed: return tIntObj.showErrorMessage(tdata[#reason], tdata[#request])#createfailed: return tIntObj.showErrorMessage(tdata[#reason], tdata[#request], tdata[#key])#startfailed: return tIntObj.showErrorMessage(tdata[#reason], tdata[#request])#instancenotavailable: return tIntObj.showErrorMessage("game_deleted")#idlewarning: return tIntObj.showErrorMessage("idlewarning")end casereturn TRUEendon createSkillLevelWindow me, tdatatSkillLevel = tdata[#lounge_skill_name]tSkillMin = tdata[#lounge_skill_score_min]tSkillMax = tdata[#lounge_skill_score_max]if tSkillMin <= 0 then tSkillMin = getText("gs_lounge_skill_no_min")if tSkillMax <= 0 then tSkillMax = getText("gs_lounge_skill_no_max")createWindow(pSkillLevelWindowId, "sw_skillevel.window")tWndObj = getWindow(pSkillLevelWindowId)if tWndObj = FALSE then return FALSEtWndObj.moveTo(228, 449)tSkillStr = replaceChunks(getText("gs_lounge_skill"), "\x", tSkillLevel)tSkillStr = replaceChunks(tSkillStr, "\y", tSkillMin)tSkillStr = replaceChunks(tSkillStr, "\z", tSkillMax)tSkillStr = replaceChunks(tSkillStr, "\r", RETURN)tElem = tWndObj.getElement("skill_text")if tElem = FALSE then return FALSEtElem.setText(tSkillStr.getProp(#line, 1))if tSkillStr.count(#line) > 1 thentElem = tWndObj.getElement("skill_score")if tElem = FALSE then return FALSEtElem.setText(tSkillStr.getProp(#line, 2))end ifreturn TRUEend