property pObjectIdon construct mereturn TRUEendon deconstruct meme.removeRoomObject()return TRUEendon define me, tdatareturn me.createRoomObject(tdata)endon render me, tValueif me.getRoomObject() = FALSE then return FALSEreturn me.getRoomObject().setFrame(tValue)endon animate me, tValueif me.getRoomObject() = FALSE then return FALSEme.getRoomObject().animate()me.delay(1000, #render, tValue)return TRUEendon createRoomObject me, tdatatdata[#id] = "sbm_" & tdata[#id]pObjectId = tdata[#id]tdata[#class] = "snowball_machine"tdata[#direction] = [0, 0]tdata[#altitude] = 0.0tdata[#dimensions] = [0, 0]tdata[#x] = tdata[#tile_x]tdata[#y] = tdata[#tile_y]tRoomComponent = GetObject(#room_component)if tRoomComponent = FALSE then return FALSEtClassContainer = tRoomComponent.getClassContainer()if tClassContainer = FALSE thenreturn error(me, "Room class container not found!", #createRoomObject)end iftClassContainer.set(tdata["class"], getClassVariable("snowwar.object_snowball_machine.roomobject.class"))return tRoomComponent.validateActiveObjects(tdata)endon getRoomObject metRoomComponentObj = GetObject(#room_component)if tRoomComponentObj = FALSE thenreturn error(me, "Room component unavailable!", #getRoomObject)end ifreturn tRoomComponentObj.getActiveObject(pObjectId)endon removeRoomObject metRoomComponentObj = GetObject(#room_component)if tRoomComponentObj = FALSE thenreturn error(me, "Room component unavailable!", #removeRoomObject)end ifif pObjectId = void() then return FALSEif not tRoomComponentObj.activeObjectExists(pObjectId) then return TRUEreturn tRoomComponentObj.removeActiveObject(pObjectId)end