property pSkillLevelList, pCreatedAvatarObjListon construct mepSkillLevelList = [:]registerMessage(#create_user, me.getID(), #storeCreatedAvatarInfo)registerMessage(#userKeywordInput, me.getID(), #showScoresChooser)return TRUEendon deconstruct meunregisterMessage(#create_user, me.getID())unregisterMessage(#userKeywordInput, me.getID())return TRUEendon Refresh me, tTopic, tdata  case tTopic of    #users: return TRUE    #gameplayerinfo: return me.storeSkillLevels(tdata)  end caseendon storeCreatedAvatarInfo me, tName, tStrIdif pSkillLevelList.findPos(tStrId) <> 0 thenreturn me.showSkillLevel(pSkillLevelList[tStrId])end ifreturn TRUEendon storeSkillLevels me, tdata  repeat with tuser in tdata    if not me.showSkillLevel(tuser) then      pSkillLevelList.addProp(string(tuser[#id]), tuser)    end if  end repeat  return TRUEendon showSkillLevel me, tdatatStrId = string(tdata[#id])tSkillValue = tdata[#skillvalue]tSkillLevel = tdata[#skilllevel]tRoomComponent = GetObject(#room_component)if tRoomComponent = FALSE then return FALSEtUserObj = tRoomComponent.getUserObject(tStrId)if tUserObj = FALSE then return FALSEtSkillStr = replaceChunks(getText("sw_user_skill"), "\x", tSkillLevel)tSkillStr = replaceChunks(tSkillStr, "\y", tSkillValue)tSkillStr = replaceChunks(tSkillStr, "\r", RETURN)tUserObj.pCustom = tSkillStrtUserObj.setProp(#pInfoStruct, #custom, tSkillStr)return TRUEendon showScoresChooser me, tKeywordif tKeyword <> ":roomscore" then return FALSEtString = EMPTYtRoomComponent = GetObject(#room_component)if tRoomComponent = FALSE then return FALSErepeat with tItem in pSkillLevelListtUserObj = tRoomComponent.getUserObject(string(tItem[#id]))if tUserObj <> FALSE thentString = tUserObj.getName() && ":" && tItem[#skillvalue] && " - " && tItem[#skilllevel] & RETURNend ifend repeatexecuteMessage(#alert, tString)return TRUEend